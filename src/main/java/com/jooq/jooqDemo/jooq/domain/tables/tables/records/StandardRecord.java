/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables.records;


import com.jooq.jooqDemo.jooq.domain.tables.tables.Standard;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StandardRecord extends UpdatableRecordImpl<StandardRecord> implements Record8<Long, String, Timestamp, String, String, Integer, String, Timestamp> {

    private static final long serialVersionUID = -581280655;

    /**
     * Setter for <code>raadsmarine.STANDARD.STANDARD_ID</code>.
     */
    public void setStandardId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.STANDARD_ID</code>.
     */
    public Long getStandardId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.CREATED_BY</code>.
     */
    public void setCreatedBy(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.CREATED_DATE</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.CREATED_DATE</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.SECTION</code>.
     */
    public void setSection(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.SECTION</code>.
     */
    public String getSection() {
        return (String) get(4);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.STANDARD</code>.
     */
    public void setStandard(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.STANDARD</code>.
     */
    public Integer getStandard() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.UPDATED_BY</code>.
     */
    public void setUpdatedBy(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.UPDATED_BY</code>.
     */
    public String getUpdatedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>raadsmarine.STANDARD.UPDATED_DATE</code>.
     */
    public void setUpdatedDate(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>raadsmarine.STANDARD.UPDATED_DATE</code>.
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Timestamp, String, String, Integer, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Timestamp, String, String, Integer, String, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Standard.STANDARD.STANDARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Standard.STANDARD.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Standard.STANDARD.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Standard.STANDARD.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Standard.STANDARD.SECTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Standard.STANDARD.STANDARD_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Standard.STANDARD.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Standard.STANDARD.UPDATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getStandardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getStandard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getStandardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSection();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getStandard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value1(Long value) {
        setStandardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value2(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value3(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value5(String value) {
        setSection(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value6(Integer value) {
        setStandard(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value7(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord value8(Timestamp value) {
        setUpdatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StandardRecord values(Long value1, String value2, Timestamp value3, String value4, String value5, Integer value6, String value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StandardRecord
     */
    public StandardRecord() {
        super(Standard.STANDARD);
    }

    /**
     * Create a detached, initialised StandardRecord
     */
    public StandardRecord(Long standardId, String createdBy, Timestamp createdDate, String description, String section, Integer standard, String updatedBy, Timestamp updatedDate) {
        super(Standard.STANDARD);

        set(0, standardId);
        set(1, createdBy);
        set(2, createdDate);
        set(3, description);
        set(4, section);
        set(5, standard);
        set(6, updatedBy);
        set(7, updatedDate);
    }
}
