/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables;


import com.jooq.jooqDemo.jooq.domain.tables.Indexes;
import com.jooq.jooqDemo.jooq.domain.tables.Keys;
import com.jooq.jooqDemo.jooq.domain.tables.Raadsmarine;
import com.jooq.jooqDemo.jooq.domain.tables.tables.records.UserrolemappingRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userrolemapping extends TableImpl<UserrolemappingRecord> {

    private static final long serialVersionUID = 1627434691;

    /**
     * The reference instance of <code>raadsmarine.UserRoleMapping</code>
     */
    public static final Userrolemapping USERROLEMAPPING = new Userrolemapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserrolemappingRecord> getRecordType() {
        return UserrolemappingRecord.class;
    }

    /**
     * The column <code>raadsmarine.UserRoleMapping.UserRoleId</code>.
     */
    public final TableField<UserrolemappingRecord, Long> USERROLEID = createField("UserRoleId", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>raadsmarine.UserRoleMapping.created_by</code>.
     */
    public final TableField<UserrolemappingRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.UserRoleMapping.CreatedDate</code>.
     */
    public final TableField<UserrolemappingRecord, Timestamp> CREATEDDATE = createField("CreatedDate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>raadsmarine.UserRoleMapping.UpdatedBy</code>.
     */
    public final TableField<UserrolemappingRecord, String> UPDATEDBY = createField("UpdatedBy", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.UserRoleMapping.UpdatedDate</code>.
     */
    public final TableField<UserrolemappingRecord, Timestamp> UPDATEDDATE = createField("UpdatedDate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>raadsmarine.UserRoleMapping.role_RoleId</code>.
     */
    public final TableField<UserrolemappingRecord, Long> ROLE_ROLEID = createField("role_RoleId", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>raadsmarine.UserRoleMapping.user_UserId</code>.
     */
    public final TableField<UserrolemappingRecord, Long> USER_USERID = createField("user_UserId", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>raadsmarine.UserRoleMapping</code> table reference
     */
    public Userrolemapping() {
        this(DSL.name("UserRoleMapping"), null);
    }

    /**
     * Create an aliased <code>raadsmarine.UserRoleMapping</code> table reference
     */
    public Userrolemapping(String alias) {
        this(DSL.name(alias), USERROLEMAPPING);
    }

    /**
     * Create an aliased <code>raadsmarine.UserRoleMapping</code> table reference
     */
    public Userrolemapping(Name alias) {
        this(alias, USERROLEMAPPING);
    }

    private Userrolemapping(Name alias, Table<UserrolemappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userrolemapping(Name alias, Table<UserrolemappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Raadsmarine.RAADSMARINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERROLEMAPPING_FK_MVQV8R6HVB1VQ3GWEGP4SEBBX, Indexes.USERROLEMAPPING_FK_TFSF450QKOGDERIV1PF729S7E, Indexes.USERROLEMAPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserrolemappingRecord, Long> getIdentity() {
        return Keys.IDENTITY_USERROLEMAPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserrolemappingRecord> getPrimaryKey() {
        return Keys.KEY_USERROLEMAPPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserrolemappingRecord>> getKeys() {
        return Arrays.<UniqueKey<UserrolemappingRecord>>asList(Keys.KEY_USERROLEMAPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserrolemappingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserrolemappingRecord, ?>>asList(Keys.FK_MVQV8R6HVB1VQ3GWEGP4SEBBX, Keys.FK_TFSF450QKOGDERIV1PF729S7E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userrolemapping as(String alias) {
        return new Userrolemapping(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userrolemapping as(Name alias) {
        return new Userrolemapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userrolemapping rename(String name) {
        return new Userrolemapping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Userrolemapping rename(Name name) {
        return new Userrolemapping(name, null);
    }
}
