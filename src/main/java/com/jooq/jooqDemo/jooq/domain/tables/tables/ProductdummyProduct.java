/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables;


import com.jooq.jooqDemo.jooq.domain.tables.Indexes;
import com.jooq.jooqDemo.jooq.domain.tables.Keys;
import com.jooq.jooqDemo.jooq.domain.tables.Raadsmarine;
import com.jooq.jooqDemo.jooq.domain.tables.tables.records.ProductdummyProductRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductdummyProduct extends TableImpl<ProductdummyProductRecord> {

    private static final long serialVersionUID = 1962511937;

    /**
     * The reference instance of <code>raadsmarine.ProductDummy_Product</code>
     */
    public static final ProductdummyProduct PRODUCTDUMMY_PRODUCT = new ProductdummyProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductdummyProductRecord> getRecordType() {
        return ProductdummyProductRecord.class;
    }

    /**
     * The column <code>raadsmarine.ProductDummy_Product.ProductDummy_id</code>.
     */
    public final TableField<ProductdummyProductRecord, Long> PRODUCTDUMMY_ID = createField("ProductDummy_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>raadsmarine.ProductDummy_Product.products_PRODUCT_ID</code>.
     */
    public final TableField<ProductdummyProductRecord, Long> PRODUCTS_PRODUCT_ID = createField("products_PRODUCT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>raadsmarine.ProductDummy_Product</code> table reference
     */
    public ProductdummyProduct() {
        this(DSL.name("ProductDummy_Product"), null);
    }

    /**
     * Create an aliased <code>raadsmarine.ProductDummy_Product</code> table reference
     */
    public ProductdummyProduct(String alias) {
        this(DSL.name(alias), PRODUCTDUMMY_PRODUCT);
    }

    /**
     * Create an aliased <code>raadsmarine.ProductDummy_Product</code> table reference
     */
    public ProductdummyProduct(Name alias) {
        this(alias, PRODUCTDUMMY_PRODUCT);
    }

    private ProductdummyProduct(Name alias, Table<ProductdummyProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductdummyProduct(Name alias, Table<ProductdummyProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Raadsmarine.RAADSMARINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRODUCTDUMMY_PRODUCT_FK_5KHTQI5R9OKC5SHS1YGQYH3AR, Indexes.PRODUCTDUMMY_PRODUCT_FK_6A7IN2SX4D06B44VXY60W2GXR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProductdummyProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProductdummyProductRecord, ?>>asList(Keys.FK_5KHTQI5R9OKC5SHS1YGQYH3AR, Keys.FK_6A7IN2SX4D06B44VXY60W2GXR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductdummyProduct as(String alias) {
        return new ProductdummyProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductdummyProduct as(Name alias) {
        return new ProductdummyProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductdummyProduct rename(String name) {
        return new ProductdummyProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductdummyProduct rename(Name name) {
        return new ProductdummyProduct(name, null);
    }
}
