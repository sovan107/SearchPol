/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables.records;


import com.jooq.jooqDemo.jooq.domain.tables.tables.ParentLookup;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParentLookupRecord extends UpdatableRecordImpl<ParentLookupRecord> implements Record8<Long, String, Timestamp, Boolean, String, String, String, Timestamp> {

    private static final long serialVersionUID = 112359766;

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.PARENT_LOOKUP_ID</code>.
     */
    public void setParentLookupId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.PARENT_LOOKUP_ID</code>.
     */
    public Long getParentLookupId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.CREATED_BY</code>.
     */
    public void setCreatedBy(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.CREATED_DATE</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.CREATED_DATE</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.IS_ACTIVE</code>.
     */
    public void setIsActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.IS_ACTIVE</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.PARENT_LOOKUP_DESCRIPTION</code>.
     */
    public void setParentLookupDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.PARENT_LOOKUP_DESCRIPTION</code>.
     */
    public String getParentLookupDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.PARENT_LOOKUP_TYPE</code>.
     */
    public void setParentLookupType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.PARENT_LOOKUP_TYPE</code>.
     */
    public String getParentLookupType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.UPDATED_BY</code>.
     */
    public void setUpdatedBy(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.UPDATED_BY</code>.
     */
    public String getUpdatedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>raadsmarine.PARENT_LOOKUP.UPDATED_DATE</code>.
     */
    public void setUpdatedDate(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>raadsmarine.PARENT_LOOKUP.UPDATED_DATE</code>.
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Timestamp, Boolean, String, String, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Timestamp, Boolean, String, String, String, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ParentLookup.PARENT_LOOKUP.PARENT_LOOKUP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ParentLookup.PARENT_LOOKUP.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return ParentLookup.PARENT_LOOKUP.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return ParentLookup.PARENT_LOOKUP.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ParentLookup.PARENT_LOOKUP.PARENT_LOOKUP_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ParentLookup.PARENT_LOOKUP.PARENT_LOOKUP_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ParentLookup.PARENT_LOOKUP.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return ParentLookup.PARENT_LOOKUP.UPDATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getParentLookupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getParentLookupDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getParentLookupType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getParentLookupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getParentLookupDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getParentLookupType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value1(Long value) {
        setParentLookupId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value2(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value3(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value4(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value5(String value) {
        setParentLookupDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value6(String value) {
        setParentLookupType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value7(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord value8(Timestamp value) {
        setUpdatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentLookupRecord values(Long value1, String value2, Timestamp value3, Boolean value4, String value5, String value6, String value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParentLookupRecord
     */
    public ParentLookupRecord() {
        super(ParentLookup.PARENT_LOOKUP);
    }

    /**
     * Create a detached, initialised ParentLookupRecord
     */
    public ParentLookupRecord(Long parentLookupId, String createdBy, Timestamp createdDate, Boolean isActive, String parentLookupDescription, String parentLookupType, String updatedBy, Timestamp updatedDate) {
        super(ParentLookup.PARENT_LOOKUP);

        set(0, parentLookupId);
        set(1, createdBy);
        set(2, createdDate);
        set(3, isActive);
        set(4, parentLookupDescription);
        set(5, parentLookupType);
        set(6, updatedBy);
        set(7, updatedDate);
    }
}
