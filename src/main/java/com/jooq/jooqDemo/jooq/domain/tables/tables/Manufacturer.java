/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables;


import com.jooq.jooqDemo.jooq.domain.tables.Indexes;
import com.jooq.jooqDemo.jooq.domain.tables.Keys;
import com.jooq.jooqDemo.jooq.domain.tables.Raadsmarine;
import com.jooq.jooqDemo.jooq.domain.tables.tables.records.ManufacturerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Manufacturer extends TableImpl<ManufacturerRecord> {

    private static final long serialVersionUID = 201841874;

    /**
     * The reference instance of <code>raadsmarine.Manufacturer</code>
     */
    public static final Manufacturer MANUFACTURER = new Manufacturer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ManufacturerRecord> getRecordType() {
        return ManufacturerRecord.class;
    }

    /**
     * The column <code>raadsmarine.Manufacturer.MANUFACTURER_ID</code>.
     */
    public final TableField<ManufacturerRecord, Long> MANUFACTURER_ID = createField("MANUFACTURER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>raadsmarine.Manufacturer.ADDRESS_LINE1</code>.
     */
    public final TableField<ManufacturerRecord, String> ADDRESS_LINE1 = createField("ADDRESS_LINE1", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Manufacturer.ADDRESS_LINE2</code>.
     */
    public final TableField<ManufacturerRecord, String> ADDRESS_LINE2 = createField("ADDRESS_LINE2", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Manufacturer.MANUFACTURER_NAME</code>.
     */
    public final TableField<ManufacturerRecord, String> MANUFACTURER_NAME = createField("MANUFACTURER_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>raadsmarine.Manufacturer</code> table reference
     */
    public Manufacturer() {
        this(DSL.name("Manufacturer"), null);
    }

    /**
     * Create an aliased <code>raadsmarine.Manufacturer</code> table reference
     */
    public Manufacturer(String alias) {
        this(DSL.name(alias), MANUFACTURER);
    }

    /**
     * Create an aliased <code>raadsmarine.Manufacturer</code> table reference
     */
    public Manufacturer(Name alias) {
        this(alias, MANUFACTURER);
    }

    private Manufacturer(Name alias, Table<ManufacturerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Manufacturer(Name alias, Table<ManufacturerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Raadsmarine.RAADSMARINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MANUFACTURER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ManufacturerRecord, Long> getIdentity() {
        return Keys.IDENTITY_MANUFACTURER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ManufacturerRecord> getPrimaryKey() {
        return Keys.KEY_MANUFACTURER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ManufacturerRecord>> getKeys() {
        return Arrays.<UniqueKey<ManufacturerRecord>>asList(Keys.KEY_MANUFACTURER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Manufacturer as(String alias) {
        return new Manufacturer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Manufacturer as(Name alias) {
        return new Manufacturer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Manufacturer rename(String name) {
        return new Manufacturer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Manufacturer rename(Name name) {
        return new Manufacturer(name, null);
    }
}
