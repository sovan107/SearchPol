/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables.records;


import com.jooq.jooqDemo.jooq.domain.tables.tables.Meeting;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeetingRecord extends UpdatableRecordImpl<MeetingRecord> implements Record9<Long, String, Timestamp, String, Timestamp, String, String, Timestamp, Long> {

    private static final long serialVersionUID = 601080443;

    /**
     * Setter for <code>raadsmarine.MEETING.MEETING_ID</code>.
     */
    public void setMeetingId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.MEETING_ID</code>.
     */
    public Long getMeetingId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.CREATED_BY</code>.
     */
    public void setCreatedBy(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.CREATED_BY</code>.
     */
    public String getCreatedBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.CREATED_DATE</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.CREATED_DATE</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.MEETING_AGENDA</code>.
     */
    public void setMeetingAgenda(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.MEETING_AGENDA</code>.
     */
    public String getMeetingAgenda() {
        return (String) get(3);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.meetingDate</code>.
     */
    public void setMeetingdate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.meetingDate</code>.
     */
    public Timestamp getMeetingdate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.TO_USERS</code>.
     */
    public void setToUsers(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.TO_USERS</code>.
     */
    public String getToUsers() {
        return (String) get(5);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.UPDATED_BY</code>.
     */
    public void setUpdatedBy(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.UPDATED_BY</code>.
     */
    public String getUpdatedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.UPDATED_DATE</code>.
     */
    public void setUpdatedDate(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.UPDATED_DATE</code>.
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>raadsmarine.MEETING.fromUser_UserId</code>.
     */
    public void setFromuserUserid(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>raadsmarine.MEETING.fromUser_UserId</code>.
     */
    public Long getFromuserUserid() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, String, Timestamp, String, Timestamp, String, String, Timestamp, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, String, Timestamp, String, Timestamp, String, String, Timestamp, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Meeting.MEETING.MEETING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Meeting.MEETING.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Meeting.MEETING.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Meeting.MEETING.MEETING_AGENDA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Meeting.MEETING.MEETINGDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Meeting.MEETING.TO_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Meeting.MEETING.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Meeting.MEETING.UPDATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return Meeting.MEETING.FROMUSER_USERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getMeetingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMeetingAgenda();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getMeetingdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getToUsers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getFromuserUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getMeetingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMeetingAgenda();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getMeetingdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getToUsers();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getFromuserUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value1(Long value) {
        setMeetingId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value2(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value3(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value4(String value) {
        setMeetingAgenda(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value5(Timestamp value) {
        setMeetingdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value6(String value) {
        setToUsers(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value7(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value8(Timestamp value) {
        setUpdatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value9(Long value) {
        setFromuserUserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord values(Long value1, String value2, Timestamp value3, String value4, Timestamp value5, String value6, String value7, Timestamp value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeetingRecord
     */
    public MeetingRecord() {
        super(Meeting.MEETING);
    }

    /**
     * Create a detached, initialised MeetingRecord
     */
    public MeetingRecord(Long meetingId, String createdBy, Timestamp createdDate, String meetingAgenda, Timestamp meetingdate, String toUsers, String updatedBy, Timestamp updatedDate, Long fromuserUserid) {
        super(Meeting.MEETING);

        set(0, meetingId);
        set(1, createdBy);
        set(2, createdDate);
        set(3, meetingAgenda);
        set(4, meetingdate);
        set(5, toUsers);
        set(6, updatedBy);
        set(7, updatedDate);
        set(8, fromuserUserid);
    }
}
