/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables;


import com.jooq.jooqDemo.jooq.domain.tables.Indexes;
import com.jooq.jooqDemo.jooq.domain.tables.Keys;
import com.jooq.jooqDemo.jooq.domain.tables.Raadsmarine;
import com.jooq.jooqDemo.jooq.domain.tables.tables.records.MycompanyinfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mycompanyinfo extends TableImpl<MycompanyinfoRecord> {

    private static final long serialVersionUID = -55342680;

    /**
     * The reference instance of <code>raadsmarine.MyCompanyInfo</code>
     */
    public static final Mycompanyinfo MYCOMPANYINFO = new Mycompanyinfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MycompanyinfoRecord> getRecordType() {
        return MycompanyinfoRecord.class;
    }

    /**
     * The column <code>raadsmarine.MyCompanyInfo.COMPANY_ID</code>.
     */
    public final TableField<MycompanyinfoRecord, Long> COMPANY_ID = createField("COMPANY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.ADDRESS</code>.
     */
    public final TableField<MycompanyinfoRecord, String> ADDRESS = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.COMPANY_LATITUDE</code>.
     */
    public final TableField<MycompanyinfoRecord, String> COMPANY_LATITUDE = createField("COMPANY_LATITUDE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.COMPANY_LONGITUDE</code>.
     */
    public final TableField<MycompanyinfoRecord, String> COMPANY_LONGITUDE = createField("COMPANY_LONGITUDE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.COMPANY_NAME</code>.
     */
    public final TableField<MycompanyinfoRecord, String> COMPANY_NAME = createField("COMPANY_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.CONTACT_PERSON</code>.
     */
    public final TableField<MycompanyinfoRecord, String> CONTACT_PERSON = createField("CONTACT_PERSON", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.EMAIL</code>.
     */
    public final TableField<MycompanyinfoRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.MyCompanyInfo.PHONE</code>.
     */
    public final TableField<MycompanyinfoRecord, String> PHONE = createField("PHONE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>raadsmarine.MyCompanyInfo</code> table reference
     */
    public Mycompanyinfo() {
        this(DSL.name("MyCompanyInfo"), null);
    }

    /**
     * Create an aliased <code>raadsmarine.MyCompanyInfo</code> table reference
     */
    public Mycompanyinfo(String alias) {
        this(DSL.name(alias), MYCOMPANYINFO);
    }

    /**
     * Create an aliased <code>raadsmarine.MyCompanyInfo</code> table reference
     */
    public Mycompanyinfo(Name alias) {
        this(alias, MYCOMPANYINFO);
    }

    private Mycompanyinfo(Name alias, Table<MycompanyinfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mycompanyinfo(Name alias, Table<MycompanyinfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Raadsmarine.RAADSMARINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MYCOMPANYINFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MycompanyinfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_MYCOMPANYINFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MycompanyinfoRecord> getPrimaryKey() {
        return Keys.KEY_MYCOMPANYINFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MycompanyinfoRecord>> getKeys() {
        return Arrays.<UniqueKey<MycompanyinfoRecord>>asList(Keys.KEY_MYCOMPANYINFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mycompanyinfo as(String alias) {
        return new Mycompanyinfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mycompanyinfo as(Name alias) {
        return new Mycompanyinfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Mycompanyinfo rename(String name) {
        return new Mycompanyinfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Mycompanyinfo rename(Name name) {
        return new Mycompanyinfo(name, null);
    }
}
