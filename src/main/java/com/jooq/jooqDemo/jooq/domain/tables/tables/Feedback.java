/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables;


import com.jooq.jooqDemo.jooq.domain.tables.Indexes;
import com.jooq.jooqDemo.jooq.domain.tables.Keys;
import com.jooq.jooqDemo.jooq.domain.tables.Raadsmarine;
import com.jooq.jooqDemo.jooq.domain.tables.tables.records.FeedbackRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Feedback extends TableImpl<FeedbackRecord> {

    private static final long serialVersionUID = -747164398;

    /**
     * The reference instance of <code>raadsmarine.Feedback</code>
     */
    public static final Feedback FEEDBACK = new Feedback();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeedbackRecord> getRecordType() {
        return FeedbackRecord.class;
    }

    /**
     * The column <code>raadsmarine.Feedback.FEEDBACK_ID</code>.
     */
    public final TableField<FeedbackRecord, Long> FEEDBACK_ID = createField("FEEDBACK_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>raadsmarine.Feedback.ADDRESS</code>.
     */
    public final TableField<FeedbackRecord, String> ADDRESS = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Feedback.EMAIL</code>.
     */
    public final TableField<FeedbackRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Feedback.FEEDBACK_LINE1</code>.
     */
    public final TableField<FeedbackRecord, String> FEEDBACK_LINE1 = createField("FEEDBACK_LINE1", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Feedback.FEEDBACK_LINE2</code>.
     */
    public final TableField<FeedbackRecord, String> FEEDBACK_LINE2 = createField("FEEDBACK_LINE2", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Feedback.PHONE</code>.
     */
    public final TableField<FeedbackRecord, String> PHONE = createField("PHONE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Feedback.RATING</code>.
     */
    public final TableField<FeedbackRecord, Double> RATING = createField("RATING", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>raadsmarine.Feedback.USER_NAME</code>.
     */
    public final TableField<FeedbackRecord, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>raadsmarine.Feedback.product_PRODUCT_ID</code>.
     */
    public final TableField<FeedbackRecord, Long> PRODUCT_PRODUCT_ID = createField("product_PRODUCT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>raadsmarine.Feedback</code> table reference
     */
    public Feedback() {
        this(DSL.name("Feedback"), null);
    }

    /**
     * Create an aliased <code>raadsmarine.Feedback</code> table reference
     */
    public Feedback(String alias) {
        this(DSL.name(alias), FEEDBACK);
    }

    /**
     * Create an aliased <code>raadsmarine.Feedback</code> table reference
     */
    public Feedback(Name alias) {
        this(alias, FEEDBACK);
    }

    private Feedback(Name alias, Table<FeedbackRecord> aliased) {
        this(alias, aliased, null);
    }

    private Feedback(Name alias, Table<FeedbackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Raadsmarine.RAADSMARINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FEEDBACK_FK_MY0AC7AYKAIP5SB6HGS37VOH, Indexes.FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FeedbackRecord, Long> getIdentity() {
        return Keys.IDENTITY_FEEDBACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FeedbackRecord> getPrimaryKey() {
        return Keys.KEY_FEEDBACK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FeedbackRecord>> getKeys() {
        return Arrays.<UniqueKey<FeedbackRecord>>asList(Keys.KEY_FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FeedbackRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FeedbackRecord, ?>>asList(Keys.FK_MY0AC7AYKAIP5SB6HGS37VOH);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Feedback as(String alias) {
        return new Feedback(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Feedback as(Name alias) {
        return new Feedback(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Feedback rename(String name) {
        return new Feedback(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Feedback rename(Name name) {
        return new Feedback(name, null);
    }
}
