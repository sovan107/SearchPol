/*
 * This file is generated by jOOQ.
*/
package com.jooq.jooqDemo.jooq.domain.tables.tables.records;


import com.jooq.jooqDemo.jooq.domain.tables.tables.Category;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> implements Record6<Long, String, String, String, String, Long> {

    private static final long serialVersionUID = 836484165;

    /**
     * Setter for <code>raadsmarine.Category.CATEGORY_ID</code>.
     */
    public void setCategoryId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>raadsmarine.Category.CATEGORY_ID</code>.
     */
    public Long getCategoryId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>raadsmarine.Category.CATEGORY_DESCRIPTION</code>.
     */
    public void setCategoryDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>raadsmarine.Category.CATEGORY_DESCRIPTION</code>.
     */
    public String getCategoryDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>raadsmarine.Category.CATEGORY_IMAGE_URL</code>.
     */
    public void setCategoryImageUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>raadsmarine.Category.CATEGORY_IMAGE_URL</code>.
     */
    public String getCategoryImageUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>raadsmarine.Category.CATEGORY_NAME</code>.
     */
    public void setCategoryName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>raadsmarine.Category.CATEGORY_NAME</code>.
     */
    public String getCategoryName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>raadsmarine.Category.CATEGORY_TYPE</code>.
     */
    public void setCategoryType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>raadsmarine.Category.CATEGORY_TYPE</code>.
     */
    public String getCategoryType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>raadsmarine.Category.parentCategory_CATEGORY_ID</code>.
     */
    public void setParentcategoryCategoryId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>raadsmarine.Category.parentCategory_CATEGORY_ID</code>.
     */
    public Long getParentcategoryCategoryId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, String, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, String, String, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Category.CATEGORY.CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Category.CATEGORY.CATEGORY_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Category.CATEGORY.CATEGORY_IMAGE_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Category.CATEGORY.CATEGORY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Category.CATEGORY.CATEGORY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Category.CATEGORY.PARENTCATEGORY_CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCategoryDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCategoryImageUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCategoryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCategoryType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getParentcategoryCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCategoryDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCategoryImageUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCategoryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCategoryType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getParentcategoryCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value1(Long value) {
        setCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value2(String value) {
        setCategoryDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value3(String value) {
        setCategoryImageUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value4(String value) {
        setCategoryName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value5(String value) {
        setCategoryType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value6(Long value) {
        setParentcategoryCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord values(Long value1, String value2, String value3, String value4, String value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(Category.CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(Long categoryId, String categoryDescription, String categoryImageUrl, String categoryName, String categoryType, Long parentcategoryCategoryId) {
        super(Category.CATEGORY);

        set(0, categoryId);
        set(1, categoryDescription);
        set(2, categoryImageUrl);
        set(3, categoryName);
        set(4, categoryType);
        set(5, parentcategoryCategoryId);
    }
}
